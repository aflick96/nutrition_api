"""changed string size and column names

Revision ID: f73e899bb30d
Revises: 
Create Date: 2023-12-08 17:10:02.344835

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f73e899bb30d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('brands', schema=None) as batch_op:
        batch_op.alter_column('BrandName',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=250),
               existing_nullable=True)

    with op.batch_alter_table('food_categories', schema=None) as batch_op:
        batch_op.alter_column('FoodCategoryName',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=250),
               existing_nullable=True)

    with op.batch_alter_table('food_items', schema=None) as batch_op:
        batch_op.add_column(sa.Column('FoodName', sa.String(length=250), nullable=False))
        batch_op.add_column(sa.Column('FoodCategoryID', sa.Integer(), nullable=True))
        batch_op.drop_constraint('food_items_CategoryID_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'food_categories', ['FoodCategoryID'], ['FoodCategoryID'])
        batch_op.drop_column('Name')
        batch_op.drop_column('CategoryID')

    with op.batch_alter_table('food_nutrients', schema=None) as batch_op:
        batch_op.add_column(sa.Column('NutrientAmount', sa.Float(), nullable=False))
        batch_op.drop_column('Value')

    with op.batch_alter_table('nutrients', schema=None) as batch_op:
        batch_op.alter_column('NutrientName',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=250),
               existing_nullable=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('nutrients', schema=None) as batch_op:
        batch_op.alter_column('NutrientName',
               existing_type=sa.String(length=250),
               type_=sa.VARCHAR(length=100),
               existing_nullable=True)

    with op.batch_alter_table('food_nutrients', schema=None) as batch_op:
        batch_op.add_column(sa.Column('Value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
        batch_op.drop_column('NutrientAmount')

    with op.batch_alter_table('food_items', schema=None) as batch_op:
        batch_op.add_column(sa.Column('CategoryID', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('Name', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('food_items_CategoryID_fkey', 'food_categories', ['CategoryID'], ['FoodCategoryID'])
        batch_op.drop_column('FoodCategoryID')
        batch_op.drop_column('FoodName')

    with op.batch_alter_table('food_categories', schema=None) as batch_op:
        batch_op.alter_column('FoodCategoryName',
               existing_type=sa.String(length=250),
               type_=sa.VARCHAR(length=100),
               existing_nullable=True)

    with op.batch_alter_table('brands', schema=None) as batch_op:
        batch_op.alter_column('BrandName',
               existing_type=sa.String(length=250),
               type_=sa.VARCHAR(length=100),
               existing_nullable=True)

    # ### end Alembic commands ###
